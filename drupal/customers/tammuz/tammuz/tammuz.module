<?php // 

$module_name = 'tammuz';
module_load_include('inc', $module_name , 'blocks');
module_load_include('inc', $module_name , 'forms');
module_load_include('inc', "intoto_main" , 'functions');

function local_crm_core_relation_entity_ui_get_form_wrapper($contact, $type, $reverse) {
	return crm_core_relation_entity_ui_get_form_wrapper($contact, $type, $reverse);
}


function tammuz_menu()
{
	$items = array();    
	$items['crm-core/contact/%crm_core_contact/household/add'] = array(
		'title' => 'Add Household',
		'description' => 'Add a household to this contact',
//		'page callback' => 'crm_core_relation_entity_ui_get_form_wrapper',
		'page callback' => 'local_crm_core_relation_entity_ui_get_form_wrapper',

		'page arguments' => array( 2, "member", "0"),
		'access callback' => 'crm_core_relationship_access_permissions',
		'access arguments' => array(NULL, 'create_view'),
//		'type' => MENU_LOCAL_ACTION,
		'type' => MENU_CALLBACK,
//		'file' => 'crm_core_relationship_ui.pages.inc',
	);

	$items['crm-core/contact/%crm_core_contact/household_member/add'] = array(
		'title' => 'Add Household Member',
		'description' => 'Add a household member to this contact',
//		'page callback' => 'crm_core_relation_entity_ui_get_form_wrapper',
		'page callback' => 'local_crm_core_relation_entity_ui_get_form_wrapper',

		'page arguments' => array( 2, "member", "1"),
		'access callback' => 'crm_core_relationship_access_permissions',
		'access arguments' => array(NULL, 'create_view'),
//		'type' => MENU_LOCAL_ACTION,
		'type' => MENU_CALLBACK,
//		'file' => 'crm_core_relationship_ui.pages.inc',
	);

	return $items;
}

function tammuz_menu_alter(&$items)
{
	//print("in intoto_crm_menu_alter\n:".print_r(array_keys($items), true). "\n");
	//unset($items['crm-core/contact/%crm_core_contact']);
	unset($items['crm-core/contact/%crm_core_contact/view']);
//	unset($items['crm-core/contact/%crm_core_contact/edit']);
	$items['crm-core/contact/%crm_core_contact/edit']['type'] = MENU_CALLBACK;
	unset ($items['crm-core/contact/%crm_core_contact/relationships/add']);
	
	
//	$items['crm-core/contact/%crm_core_contact/view'] = $items['crm-core/contact/%crm_core_contact/details'];
//	$items['crm-core/contact/%crm_core_contact/view']['type'] = MENU_CALLBACK;
//	$items['crm-core/contact/%crm_core_contact/details']['type'] = MENU_DEFAULT_LOCAL_TASK;
}


function tammuz_views_default_views_alter(&$views)
{

	if (isset($views['crm_activities_by_contact'])){
		$views['crm_activities_by_contact'] -> disabled = true;
	}
	if (isset($views['crm_relationships_by_contact']))
	{
		$views['crm_relationships_by_contact'] -> disabled = true;
	}
}

/**
* Implementation of hook_ctools_plugin_api().
*/
function tammuz_ctools_plugin_api($module, $api) {
  if ($module == 'page_manager' && $api == 'pages_default') {
    return array('version' => 1); 
  }
}


function tammuz_views_api() {
  return array(
    'api' => '2.0',
  );
}



function tammuz_entity_presave($entity, $type)
{
	intoto_entity_generic_function_dispatcher($entity, $type);
}

function tammuz_entity_presave_relation($entity)
{
	$participates_in_journey_relation_id = 'participate_in';
	if(	$entity->relation_type->value() == $participates_in_journey_relation_id	)
	{
		$endpoints = [];
		foreach($entity->endpoints as $endpoint)
		{
			$endpoints[$endpoint->{"type"}->value()] = $endpoint;
		}
		if (isset($endpoints['journey']) && isset($endpoints['customer'])){
			//count journeys on this customer already.
			//don't use $endpoints['customer']->relation_participate_in_crm_core_contact->count();
			// because it counts both sides of the relation
			$journey_count_per_customer = intoto_count_relations($endpoints['customer']->contact_id->value(), $participates_in_journey_relation_id);
			$journey_count_per_customer ++; 
			$endpoints['journey']->{'field_caption'}->set($journey_count_per_customer); //the caption of the journey is simply its ordinal per the customer
		
		//	$endpoints['journey']->{'contact_name'}->{"family"}->set("x"); 
			$endpoints['journey']->save();
		}
	}
}



//implements hook_field_format_alter which is a hook we invented in intoto
function tammuz_field_format_alter(&$element)
{
	intoto_field_format_alter_dispatcher($element);
}

/* 
 * implements hook_field_format_alter which is a hook we invented in intoto
 * structure of function name: 
 * module (tammuz)
 * hook name (field_format)
 * alter
 * function_part[0] = field_type (name)
 * function_part[1] = field_name (contact_name)
 * function_part[2] = bundle (journey)
 */
function tammuz_field_format_alter_name_contact_name_journey(&$element)
{

	// a journey name is only its ordinal in relation to the customer.
	$customer_entity_container = intoto_get_related_contacts($element['entity']->contact_id, 'participate_in');
	$customer_name = "Unknown Customer";
	foreach($customer_entity_container as $id=>$entity)
	{
		if ($entity->type == 'customer'){
			$entity_wrapper = entity_metadata_wrapper('crm_core_contact', $entity);
			$customer_name = $entity_wrapper->{"field_caption"}->value();
		}
	}
	
	$element['value']['given'] = t("@customer_name - Journey #@journey_id", 
			[
				"@customer_name" => $customer_name, 
				"@journey_id" => $element['value']['given']
			]
		);
	
}


/* 
 * implements hook_field_format_alter which is a hook we invented in intoto
 * structure of function name: 
 * module (tammuz)
 * hook name (field_format)
 * alter
 * function_part[0] = field_type (text)
 * function_part[1] = field_name (field_customer_number)
 * function_part[2] = bundle (customer)
 */
function tammuz_field_format_alter_text_field_customer_number_customer(&$element)
{
	$element['value'] = "#" . $element['value'];  // customer number shold be shown as #2045 instead of just 2045
}
